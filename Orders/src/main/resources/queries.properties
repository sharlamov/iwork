testSQL=select cod, denumirea clccodt from vms_univ_div u where tip = 'O' and gr1='R' and nvl2(:clcdivt, u.div, 0) = nvl2(:clcdivt, :clcdivt, 0)
univOI=select cod, denumirea__1 as clccodt from vms_univers where tip='O' and gr1 = 'I' and isarhiv is null order by cod, denumirea, codvechi
syssState=select cod1 cod, denumirea clccodt from vms_syss where tip = 'TO' and cod = 3 and cod1 > 0 order by 1
univOR=select cod, denumirea__1 as clccodt from vms_univers where tip='O' and gr1 = 'R' and isarhiv is null order by cod, denumirea, codvechi
univOE=select cod, denumirea__1 as clccodt from vms_univers where tip='O' and gr1 = 'E' and isarhiv is null order by cod, denumirea, codvechi
univOCFR=select cod, denumirea__1 as clccodt from vms_univers where tip='O' and gr1 = 'CFR' and isarhiv is null order by cod, denumirea, codvechi
univTCTYPE=select cod, denumirea__1 as clccodt from vms_univers where tip='T' and gr1 = 'CTYPE' and isarhiv is null order by cod, denumirea, codvechi
ordersList=select * from vmdb_orders o where exists (select * from TMS_order_fin_resp r where o.div = div_id and user_id = :userid and (r.cfr = o.cfo or r.cfr = 0)
canCreate=select count(*) cnt from tms_order_fin_resp r where user_id = :status
order=select * from vmdb_orders where ord = :ord
orderFiles=select * from tmdb_orders_files where ord = :ord
orderHistory=select h.*, lvl - nvl(lag(lvl, 1) over (partition by ord order by ord1 ),0) as direct from vmdb_orders_history h  where ord = :ord order by ord1 desc
nextId=select ID_ORDERS.nextval nId from dual
insertOrder=insert into vmdb_orders(ord, pay_date, status, userid, cfo, initiator, type_cost, client, text, suma, val, div, dep, offers, comments, lvl, reg_time, contpay) values(:ord, :pay_date, :clcstatust, :clcuseridt, :clccfot, :clcinitiatort, :clctype_costt, :clcclientt, :text, :suma, :val, :clcdivt, :clcdept, :offers, :comments, :lvl, sysdate,:contpay)
updateOrder=update vmdb_orders set (pay_date, status, userid, cfo, initiator, type_cost, client, text, suma, val, div, dep, offers, comments, lvl, contpay) =  (select :pay_date, nvl(:clcstatust, 1), :clcuseridt, :clccfot, :clcinitiatort, :clctype_costt, :clcclientt, :text, :suma, :val, :clcdivt, :clcdept, :offers, :comments, :lvl, :contpay from dual) where ord = :ord
nextLevel=select min(authoriz_level) nStep, count(id) rSteps from tms_order_fin_resp r where r.div_id =:clcdivt and (r.cfr = :clccfot or r.cfr = 0) and authoriz_level > nvl(:lvl,0) and authoriz_level <= (select authoriz_level_till from tms_order_sum_level where :suma between suma_from and suma_to)
previousLevel=select max(authoriz_level) nStep, count(id) rSteps from tms_order_fin_resp r where r.div_id =:clcdivt and (r.cfr = :clccfot or r.cfr = 0) and authoriz_level < nvl(:lvl,0) and authoriz_level <= (select authoriz_level_till from tms_order_sum_level where :suma between suma_from and suma_to)
delteFile=delete from tmdb_orders_files where ord = :ord and fileid = :fileid
insertFile=insert into tmdb_orders_files (ord, fileid, filename, filetype, filedata) values(:ord, ID_ORDER_FILES.nextval, :fileName,:filetype, :filedata)
insertHistory=insert into tmdb_orders_history (ord, ord1, lvl, datetime, text, userid, status) values(:ord, id_order_files.nextval, :lvl, sysdate, :text, :clcuseridt, :clcstatust)
findRecipients=select email from tmdb_user_emails where user_id in ( select user_id from tms_order_fin_resp r where r.div_id =:clcdivt and (r.cfr = :clccfot or r.cfr = 0) and authoriz_level = :lvl)